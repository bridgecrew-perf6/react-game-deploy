{"version":3,"sources":["logo.svg","components/OperationButton.js","components/HeaderInput.js","components/OperationCard.js","components/GameBoard.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","OperationButton","props","react_default","a","createElement","className","isSelected","onClick","onClickFunction","operator","RegExp","HeaderInput","_useState","useState","_useState2","Object","slicedToArray","colour","setColour","styles","h1","marginLeft","display","color","concat","type","placeholder","onChange","event","strColor","target","value","test","style","OperationCard","operation","number","applyFunction","deleteFunction","GameBoard","selected","setSelected","_useState3","_useState4","setNumber","_useState5","_useState6","operationCards","setOperationCards","_useState7","_useState8","result","setResult","handleClick","textContent","components_HeaderInput","components_OperationButton","id","onSubmit","preventDefault","newOperationCard","toConsumableArray","map","card","index","components_OperationCard","key","cards","splice","handleDeleteCard","cardNumber","cardOperation","resultCalc","handleApplyOperation","App","components_GameBoard","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.072c9ca4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from \"react\";\nimport \"./css/operation-button.css\";\n\nconst styles = {\n  selected: {\n    color: \"red\",\n  },\n};\n\nconst OperationButton = (props) => {\n  return <button className={props.isSelected ? \"selected\":\"\"} onClick={props.onClickFunction}>{props.operator}</button>;\n};\n\nexport default OperationButton;\n","import React, { useState } from \"react\";\n\nconst RegExp = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i;\nconst isColor = (strColor) => {\n  return RegExp.test(strColor);\n};\n\nconst HeaderInput = (props) => {\n  const [colour, setColour] = useState(\"#0000FF\");\n\n  const styles = {\n    h1: {\n      marginLeft: \"20px\",\n      display: \"inline-block\",\n      color: `${colour}`,\n    },\n  };\n  const handleInput = (event) => {\n    if(isColor(event.target.value)) setColour(event.target.value);\n  };\n  return (\n    <div>\n      <input type=\"text\" placeholder=\"Colour\" onChange={handleInput} value={colour}></input>\n      <h1 style={styles.h1}>EL JUEGO DE JUANMA</h1>\n    </div>\n  );\n};\n\nexport default HeaderInput;\n","import React from \"react\";\nimport \"./css/operation-card.css\";\n\nconst OperationCard = (props) => {\n  return (\n    <div className=\"card-body\">\n      <label>{props.operation}</label>\n      <label className=\"number-label\">{props.number}</label>\n      <div className=\"buttons-body\">\n        <button onClick={props.applyFunction}>APPLY</button>\n        <button onClick={props.deleteFunction}>DELETE</button>\n      </div>\n    </div>\n  );\n};\n\nexport default OperationCard;\n","import React, { useState } from \"react\";\nimport OperationButton from \"./OperationButton.js\";\nimport HeaderInput from \"./HeaderInput.js\";\nimport OperationCard from \"./OperationCard.js\";\nimport \"./css/game-board.css\";\n\nconst GameBoard = () => {\n  const [selected, setSelected] = useState(\"X\");\n  const [number, setNumber] = useState(0);\n  const [operationCards, setOperationCards] = useState([]);\n  const [result, setResult] = useState(0);\n\n  const styles = {\n    color: `${result === 0 ? 'red' : 'green'}`\n  };\n\n  const handleClick = (event) => {\n    setSelected(event.target.textContent);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    let newOperationCard = [\n      {\n        number: number,\n        operation: selected,\n      },\n    ];\n    setOperationCards([...operationCards, ...newOperationCard]);\n  };\n\n  const handleDeleteCard = (index) => {\n    let cards = [...operationCards];\n    cards.splice(index, 1);\n    setOperationCards(cards);\n  };\n\n  const handleApplyOperation = (cardNumber, cardOperation) => {\n    let resultCalc = 0;\n    switch (cardOperation) {\n      case \"+\":\n        resultCalc = (+number) + (+cardNumber);\n        resultCalc = resultCalc >= 0 ? resultCalc : 0;\n        setResult(resultCalc);\n        break;\n      case \"-\":\n        resultCalc = number - cardNumber;\n        resultCalc = resultCalc >= 0 ? resultCalc : 0;\n        setResult(resultCalc);\n        break;\n      case \"%\":\n        resultCalc = number % cardNumber;\n        resultCalc = resultCalc >= 0 ? resultCalc : 0;\n        setResult(resultCalc);\n        break;\n      case \"X\":\n        resultCalc = number * cardNumber;\n        resultCalc = resultCalc >= 0 ? resultCalc : 0;\n        setResult(resultCalc);\n        break;\n      default:\n        setResult(resultCalc);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <HeaderInput></HeaderInput>\n      <OperationButton\n        operator=\"X\"\n        isSelected={selected === \"X\" ? true : false}\n        onClickFunction={handleClick}\n      ></OperationButton>\n      <OperationButton\n        operator=\"%\"\n        isSelected={selected === \"%\" ? true : false}\n        onClickFunction={handleClick}\n      ></OperationButton>\n      <OperationButton\n        operator=\"-\"\n        isSelected={selected === \"-\" ? true : false}\n        onClickFunction={handleClick}\n      ></OperationButton>\n      <OperationButton\n        operator=\"+\"\n        isSelected={selected === \"+\" ? true : false}\n        onClickFunction={handleClick}\n      ></OperationButton>\n      <div>\n        <label style={styles} id=\"display-result\">{result}</label>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            id=\"number-input\"\n            placeholder=\"Number\"\n            onChange={(event) => setNumber(event.target.value)}\n          ></input>\n          <input type=\"submit\" value=\"ADD\" className=\"submit-button\"></input>\n        </form>\n      </div>\n      {operationCards.map((card, index) => (\n        <OperationCard\n          key={index}\n          number={card.number}\n          operation={card.operation}\n          deleteFunction={() => handleDeleteCard(index)}\n          applyFunction={() =>\n            handleApplyOperation(card.number, card.operation)\n          }\n        ></OperationCard>\n      ))}\n    </div>\n  );\n};\n\nexport default GameBoard;\n","import logo from './logo.svg';\nimport './App.css';\nimport GameBoard from './components/GameBoard.js';\nimport React from 'react';\n\nfunction App() {\n  return (\n    <div>\n      <GameBoard></GameBoard>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}